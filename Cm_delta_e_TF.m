% Bomb Model-II Body + TailFins
%% Variation of Moment coefficient w.r.t. Elevator deflection
format long g

g = 9.81;
Cl = [];
Alpha = [];
C_m = [];

%Balance load matrix
CM = [63.080043	0.144499	-0.206795	1.354260	1.630051	4.275882
    -0.123649	150.309342	0.592082	-0.725847	0.030856	0.393628
    0.024098	-0.689773	151.831777	0.096597	-0.571799	-4.414537
    0.152944	-2.334107	0.037781	77.595997	0.445712	5.841784
    -0.006030	0.114642	-0.574072	-0.065800	79.176337	0.322466
    0.047415	0.466131	0.099431	0.208017	0.190935	44.877349 ];

% Model reference parameters
% Sref(sqm)	        Chord (m)	    Span (m)
Sref = 0.009677;	c = 0.111;	    b = 0.111;

% Moment reference point (nose)
% X (m)		Y (m)		Z (m)
% 0	        0	        0

% Balance center location
%X (m)		Y (m)		Z (m)
X =-0.465;	Y = 0;	    Z = 0;

% Nowind data
%     Ax		    N1		    N2		    S1		    S2		    Rm
NW = [-0.000655	    0.000580	-0.000061	0.001303	0.000511	0.000551 %-25
      0.000727	    0.001383	-0.000710	0.000064	0.001230	0.000460 %-20
      0.000234	    0.001138	-0.000113	0.000821	0.000607	0.000418 %-15
      0.001164	    -0.000152	-0.001091	-0.000283	-0.000726	-0.001041 %-10
      0.000761	    -0.000269	-0.000213	0.000323	0.001154	0.001504 %-5
      -0.000122	    -0.000856	0.000737	-0.000887	-0.000321	0.000540 %0
      0.000176	    -0.000758	0.000311	0.001223	0.000471	0.000796 %+5
      0.000913	    -0.000361	-0.000542	0.000175	0.001508	0.001359 %+10
      -0.000581	    0.000769	0.000178	0.001345	0.000025	-0.000342 %+15
      0.000648	    0.001307	-0.000417	0.000376	0.001049	0.000623 %+20
      -0.000356	    0.000863	0.000397	-0.001130	0.000920	0.000653];%-25

Pitchi = -4.062500;

for i = 1:3
if i == 1
% Data for Speed 1
%       Dyn. head	Elevator	Yaw		    Roll		Ax		    N1		    N2		    S1		    S2		    Rm
DSi = [ 959.215909	-25     	0.000000	0.000000	0.020809	0.035519	-0.056306	0.000113	0.003513	0.000338
        945.375000	-20     	0.000000	0.000000	0.017000	0.032764	-0.051806	-0.001380	0.004308	0.000178
        969.715909	-15     	0.000000	0.000000	0.012300	0.027724	-0.044101	-0.000783	0.003810	0.000219
        955.397727	-10	        0.000000	0.000000	0.008789	0.016792	-0.030323	0.000179	-0.001099	-0.000978
        946.000000	-5      	0.000000	0.000000	0.006074	0.009475	-0.018501	0.001110	0.000089	0.001411
        963.625000	0       	0.000000	0.000000	0.004555	0.003472	-0.009070	0.000284	-0.002226	0.000534
        968.113636	5       	0.000000	0.000000	0.005048	-0.002249	-0.000300	0.002634	-0.001922	0.000944
        958.181818	10      	0.000000	0.000000	0.006581	-0.006434	0.006048	0.002046	-0.001971	0.001487
        971.136364	15      	0.000000	0.000000	0.007039	-0.010792	0.015021	0.002501	-0.002428	0.000009
        952.795455	20      	0.000000	0.000000	0.011158	-0.016412	0.023965	0.001802	-0.001871	0.000739
        972.090909	25      	0.000000	0.000000	0.016034	-0.025392	0.037407	-0.000543	-0.001439	0.001005];%20


end
if i == 2
%Data for Speed 2
%       Dyn. head	Elevator	Yaw		    Roll		Ax		    N1		    N2		    S1		    S2		    Rm
DSi = [ 1508.863636	-25     	0.000000	0.000000	0.032557	0.055046	-0.087883	-0.001548	0.006623	0.000179
        1479.590909	-20     	0.000000	0.000000	0.025762	0.050157	-0.080249	-0.002414	0.006471	-0.000063
        1493.329545	-15     	0.000000	0.000000	0.018344	0.041720	-0.067317	-0.001995	0.005961	-0.000101
        1499.204545	-10     	0.000000	0.000000	0.012839	0.026321	-0.046709	0.000167	-0.000801	-0.001099
        1501.136364	-5      	0.000000	0.000000	0.008936	0.014733	-0.028551	0.001414	-0.000326	0.001182
        1499.386364	0       	0.000000	0.000000	0.006959	0.005793	-0.014346	0.000839	-0.003119	0.000437
        1508.818182	5       	0.000000	0.000000	0.007640	-0.003056	-0.000694	0.003504	-0.003566	0.000874
        1496.454545	10      	0.000000	0.000000	0.009508	-0.009560	0.009225	0.003080	-0.003873	0.001424
        1501.613636	15      	0.000000	0.000000	0.010937	-0.016761	0.022506	0.003050	-0.003537	0.000094
        1494.534091	20      	0.000000	0.000000	0.016665	-0.026030	0.037008	0.002546	-0.003395	0.000550
        1493.204545	25      	0.000000	0.000000	0.024246	-0.039097	0.056697	-0.000615	-0.002430	0.001169];


end
if i == 3
% Data for Speed 3
%       Dyn. head	Pitch		Yaw		    Roll		Ax		    N1		    N2		    S1		    S2		    Rm
DSi = [2155.909091	-25     	0.000000	0.000000	0.046215	0.078035	-0.125042	-0.003401	0.010173	-0.000063
       2155.625000	-20     	0.000000	0.000000	0.036439	0.071775	-0.115743	-0.003705	0.009093	-0.000500
       2160.931818	-15     	0.000000	0.000000	0.025840	0.059415	-0.096672	-0.003945	0.009431	-0.000463
       2155.000000	-10     	0.000000	0.000000	0.017529	0.037600	-0.066252	-0.000126	-0.000171	-0.001421
       2158.284091	-5      	0.000000	0.000000	0.012240	0.021072	-0.040698	0.001573	-0.000301	0.000988
       2161.352273	0	        0.000000	0.000000	0.009910	0.008425	-0.020681	0.001316	-0.003819	0.000239
       2169.738636	5	        0.000000	0.000000	0.010722	-0.004133	-0.001082	0.004393	-0.005198	0.000746
       2162.159091	10      	0.000000	0.000000	0.013050	-0.013332	0.012940	0.004307	-0.006105	0.001305
       2156.000000	15	        0.000000	0.000000	0.015555	-0.023918	0.031557	0.003639	-0.004768	0.000206
       2150.534091	20      	0.000000	0.000000	0.023154	-0.037656	0.052766	0.003409	-0.005389	0.000411
       2164.659091	25      	0.000000	0.000000	0.034736	-0.056819	0.081326	-0.000750	-0.003101	0.001401];

end
Le = 0.884;
% Transformation Matrix from CG to Body center
x = -0.0074; % Xnp --> 0.605 (Neutral point from nose)
y = 0;
z = 0;
TM =[-1,  0,  0,  0,  0,  0
      0,  1,  0,  0,  0,  0
      0,  0,  -1, 0,  0,  0
      0,  -z, y,  1,  0,  0
      z,  0,  -x, 0,  1,  0
      -y, x,  0,  0,  0,  1];


    for j = 1:11
        aj = [DSi(j,5) ; DSi(j,6) ; DSi(j,7) ; DSi(j,8) ; DSi(j,9) ; DSi(j,10)];
        % Convert the obtained normalized voltage signals to kg
        Aj = CM * (aj-(NW(j,1:6))');
        % Calculate the forces and moments about the balance center
        fm = [Aj(1) ; (Aj(4)+Aj(5)) ; (Aj(2)+Aj(3)) ; Aj(6) ; (Aj(2)-Aj(3))*0.065 ; (Aj(4)-Aj(5))*0.065].*g;
        % Transform the forces and moments to the body axis
        FM = [Aj(1) ; (Aj(4)+Aj(5)) ; (Aj(2)+Aj(3)) ; Aj(6) ; (Aj(2)-Aj(3))*0.065 ; (Aj(4)-Aj(5))*0.065].*g; 
        % Transform the forces and moments to the C.G of the flight vehicle
        FMcg = TM * FM;
        % The variation of longitudinal force and moment coefficients
        Cf = (1/(DSi(j,1)*Sref)).*[FMcg(1:3)];
        Cm = (1/(DSi(j,1)*Sref*Le)).*[FMcg(4:6)];
        
        Ele = (DSi(j,2));
        % Variation of Aerodynamic force coefficients with angle of attack
        Aero_TM = [ sind(Pitchi)   0   -cosd(Pitchi)
                   -cosd(Pitchi)   0   -sind(Pitchi)
                   0               1   0];
        
        Aero_Coeff = Aero_TM*Cf;
        
        % Recording The Data
        Alpha = [Alpha; Ele'];
        Cl  = [Cl; Aero_Coeff'];
        C_m = [C_m; Cm'];

    end
end

        A1= Alpha(1:11);
        B1= Cl(1:11,1);
        D1= C_m(1:11,2);
        A2= Alpha(12:22);
        B2= Cl(12:22,1);
        D2= C_m(12:22,2);
        A3= Alpha(23:33);
        B3= Cl(23:33,1);
        D3= C_m(23:33,2);
        

figure(1)       
        hold on
        plot(A1,B1,'r-*',A2,B2,'g--o',A3,B3,'b-+')   
        hold off       
        xlabel('\delta_e')
        ylabel('Cl')
        title('C_l vs \delta_e')
        legend('V1=40m/s','V2=50m/s','V3=60m/s')
        grid on

figure(2)
        hold on
        plot(A1,D1,'r-*',A2,D2,'g--o',A3,D3,'b-+')   
        hold off
        xlabel('\delta_e')
        ylabel('C_m')
        %%%ylim([-2 2])
        title('C_m vs \delta_e')
        legend('V1=40m/s','V2=50m/s','V3=60m/s')
        grid on

% Calculating Slope of Moment Coefficient
% For V1
        cc1=0;
        Cm_Alpha1i = 0;
        Cl_Alpha1i = 0;
        for l = 2:1:11
        D_Alpha1 =  A1(l)-A1(l-1) ;
        D_Cl1 = B1(l)-B1(l-1);
        D_Cm1 = D1(l)-D1(l-1);
        Cm_alpha1 = D_Cm1/D_Alpha1;
        Cl_alpha1 = D_Cl1/D_Alpha1;
        Cl_Alpha1i = Cl_Alpha1i + Cl_alpha1;
        Cm_Alpha1i = Cm_Alpha1i + Cm_alpha1;
        cc1 = cc1+1;
        end        
        F_Cm_Alpha1 = Cm_Alpha1i/cc1;
        F_Cl_Alpha1 = Cl_Alpha1i/cc1;
        disp('For V1 = 40 m/s')
        disp('Average value of Cl_delta_e')
        disp(F_Cl_Alpha1)
        disp('Average value of Cm_delta_e')
        disp(F_Cm_Alpha1)

% For V2
        cc2=0;
        Cm_Alpha2i = 0;
        Cl_Alpha2i = 0;
        for l = 2:1:11
        D_Alpha2 =  A2(l)-A2(l-1) ;
        D_Cl2 = B2(l)-B2(l-1);
        D_Cm2 = D2(l)-D2(l-1);
        Cm_alpha2 = D_Cm2/D_Alpha2;
        Cl_alpha2 = D_Cl2/D_Alpha2;
        Cl_Alpha2i = Cl_Alpha2i + Cl_alpha2;
        Cm_Alpha2i = Cm_Alpha2i + Cm_alpha2;
        cc2 = cc2+1;
        end
        F_Cm_Alpha2 = Cm_Alpha2i/cc2;
        F_Cl_Alpha2 = Cl_Alpha2i/cc2;
        disp('For V2 = 50 m/s')
        disp('Average value of Cl_delta_e')
        disp(F_Cl_Alpha2)
        disp('Average value of Cm_delta_e')
        disp(F_Cm_Alpha2)

% For V3
        cc3=0;
        Cm_Alpha3i = 0;
        Cl_Alpha3i = 0;
        for l = 2:1:11
        D_Alpha3 =  A3(l)-A3(l-1) ;
        D_Cl3 = B3(l)-B3(l-1);
        D_Cm3 = D3(l)-D3(l-1);
        Cm_alpha3 = D_Cm3/D_Alpha3;
        Cl_alpha3 = D_Cl3/D_Alpha3;
        Cl_Alpha3i = Cl_Alpha3i + Cl_alpha3;
        Cm_Alpha3i = Cm_Alpha3i + Cm_alpha3;
        cc3 = cc3+1;
        end
        F_Cm_Alpha3 = Cm_Alpha3i/cc3;
        F_Cl_Alpha3 = Cl_Alpha3i/cc3;
        disp('For V3 = 60 m/s')
        disp('Average value of Cl_delta_e')
        disp(F_Cl_Alpha3)
        disp('Average value of Cm_delta_e')
        disp(F_Cm_Alpha3)
